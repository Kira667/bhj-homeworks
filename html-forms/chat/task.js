const chatWidgetNode = document.querySelector('.chat-widget');
const messagesNode = document.querySelector( '.chat-widget__messages');
const chatWidgetInputNode = document.querySelector('.chat-widget__input');
const messagesContainerNode = document.querySelector('.chat-widget__messages-container');

let focusInput = false;

const phrases = [
	{
		user: '–£—Ö–∞–¥–∏',
		robot: '–°–∞–º —É—Ö–∞–¥–∏ üò°'
	},
	{
		user: '–¢—ã –¥—É—Ä–∞–∫?',
		robot: '–≠—Ç–æ —É–∂–µ —Å–º–µ—à–Ω–æ üòÇ'
	},
	
];

chatWidgetInputNode.addEventListener('focusin', () => focusInput = true);
chatWidgetInputNode.addEventListener('focusout', () => focusInput = false);

chatWidgetNode.addEventListener('click', (event) => {
	chatWidgetNode.classList.add('chat-widget_active');
});

window.addEventListener('keypress', (event) => {
	if (event.key === 'Enter' && focusInput === true && chatWidgetInputNode.value !== '') {
		sendMessageUser(chatWidgetInputNode.value, messagesNode, phrases, messagesContainerNode);
		chatWidgetInputNode.value = '';
	}
});

function sendMessageUser(text, messagesNode, phrases, messagesContainerNode) {
	sendMessage(text, messagesNode, true, messagesContainerNode);
	setTimeout(() => {

		for (const phrase of phrases) {
			
			const phraseUser = phrase.user.toLowerCase();
			const textLower = text.toLowerCase();

			if (phraseUser.search(textLower) !== -1) {
				sendMessageRobot(phrase.robot, messagesNode, messagesContainerNode);
				return;
			}
		}

		sendMessageRobot('–¢—ã –¥—É—Ä–∞–∫? (default)', messagesNode, messagesContainerNode); // –∫–æ–¥ –Ω–∏–∂–µ —Ü–∏–∫–ª–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Ö–æ–∂–∞—è —Ñ—Ä–∞–∑–∞ user'a
	}, 1000);
}

function sendMessageRobot(text, messagesNode, messagesContainerNode) {
	sendMessage(text, messagesNode, false, messagesContainerNode);

	if (sendMessageRobot.idTimeout !== undefined) { // –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–∂–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
		clearTimeout(sendMessageRobot.idTimeout);
	}

	sendMessageRobot.idTimeout = setTimeout(() => {
		// –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –ø–æ—Å–ª–µ –ø—Ä–æ—Å—Ç–æ—è 30 —Å–µ–∫—É–Ω–¥
		sendMessage('–¢—ã –∂–∏–≤–æ–π?', messagesNode, false, messagesContainerNode);
	}, 30000);

}

function sendMessage(text, messagesNode, clientBool, messagesContainerNode) {
	const messageUserNode = document.createElement('div');
	const date = new Date();
	const hourses = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();
	const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();
	const time = `${hourses}:${minutes}`;

	if (clientBool === true) {
		messageUserNode.classList.add('message', 'message_client');
	} else {
		messageUserNode.classList.add('message');
	}

	
	messageUserNode.innerHTML = `
		<div class="message__time">${time}</div>
		<div class="message__text">${text}</div>
	`;
	messagesNode.append(messageUserNode);

	messagesContainerNode.scroll({
		top: messagesContainerNode.scrollHeight,
		behavior: 'smooth'
	});
}

